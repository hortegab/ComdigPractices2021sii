options:
  parameters:
    author: Homero Ortega Boada
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: "Lo m\xE1ximo para practicar el tema de Filtro Coseno Alzado"
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: top_block
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: top_block
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 4.0]
    rotation: 0
    state: enabled

blocks:
- name: BW_filtro
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,0,1,1
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: Fmax/100
    stop: Fmax
    value: Fmax
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 188.0]
    rotation: 0
    state: disabled
- name: Delay_eye
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 3,0,1,1
    label: Centering the Eye
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: Sps-1
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 324.0]
    rotation: 0
    state: enabled
- name: EbN0max
  id: variable
  parameters:
    comment: ''
    value: EsN0max-math.log10(bps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 140.0]
    rotation: 0
    state: enabled
- name: EbN0min
  id: variable
  parameters:
    comment: ''
    value: EsN0min-math.log10(bps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1296, 76.0]
    rotation: 0
    state: enabled
- name: EsN0max
  id: variable
  parameters:
    comment: ''
    value: '25.'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1200, 140.0]
    rotation: 0
    state: enabled
- name: EsN0min
  id: variable
  parameters:
    comment: ''
    value: '-5.'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1200, 76.0]
    rotation: 0
    state: enabled
- name: Fmax
  id: variable
  parameters:
    comment: ''
    value: samp_rate/2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [864, 4.0]
    rotation: 0
    state: enabled
- name: M
  id: variable
  parameters:
    comment: ''
    value: len(constelacion )
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 4.0]
    rotation: 0
    state: enabled
- name: MaxCount
  id: variable
  parameters:
    comment: ''
    value: int(1e7)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1864, 380.0]
    rotation: 0
    state: disabled
- name: MaxErrors
  id: variable
  parameters:
    comment: ''
    value: '1000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1864, 444.0]
    rotation: 0
    state: disabled
- name: N_snr
  id: variable
  parameters:
    comment: ''
    value: '16'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 12.0]
    rotation: 0
    state: enabled
- name: Pn
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 2,0,1,1
    label: Potencia del ruido
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: 1/100
    stop: '1'
    value: '0.05'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 196.0]
    rotation: 0
    state: disabled
- name: Rb
  id: variable
  parameters:
    comment: ''
    value: Rs*bps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 4.0]
    rotation: 0
    state: enabled
- name: Rs
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 4.0]
    rotation: 0
    state: enabled
- name: Sps
  id: variable
  parameters:
    comment: ''
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 4.0]
    rotation: 0
    state: enabled
- name: Timing
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: menu@4:1,0,1,1
    label: Timing
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: Sps-1
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1592, 444.0]
    rotation: 0
    state: disabled
- name: beta
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 1,0,1,1
    label: beta
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: 1/100
    stop: '1'
    value: '1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 324.0]
    rotation: 0
    state: disabled
- name: bps
  id: variable
  parameters:
    comment: ''
    value: int(math.log(M,2))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 4.0]
    rotation: 0
    state: enabled
- name: constelacion
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_16qam().points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 4.0]
    rotation: 0
    state: enabled
- name: h
  id: variable
  parameters:
    comment: ''
    value: '[1]*Sps'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 132.0]
    rotation: 0
    state: disabled
- name: h
  id: variable
  parameters:
    comment: ''
    value: wform.rcos(Sps,ntaps,beta)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 132.0]
    rotation: 0
    state: disabled
- name: h
  id: variable
  parameters:
    comment: ''
    value: wform.rrcos(Sps,ntaps,beta)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1704, 132.0]
    rotation: 0
    state: disabled
- name: ntaps
  id: variable
  parameters:
    comment: ''
    value: 16*Sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 68.0]
    rotation: 0
    state: enabled
- name: retardo_propag
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: menu@4:0,0,1,1
    label: retardo_propag
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: int
    start: '0'
    step: '1'
    stop: Sps*ntaps
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1712, 444.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: Rs*Sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 4.0]
    rotation: 0
    state: enabled
- name: E3TRadio_Zero_Order_Hold_0
  id: E3TRadio_Zero_Order_Hold
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: bps
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 1332.0]
    rotation: 0
    state: disabled
- name: E3TRadio_e_BERtool_0_0
  id: E3TRadio_e_BERtool
  parameters:
    N: N_snr*bps
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 1336.0]
    rotation: 0
    state: disabled
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '2'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '1000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [22, 126]
    rotation: 0
    state: true
- name: b_demod_constelacion_cb_0
  id: b_demod_constelacion_cb
  parameters:
    Constelacion: constelacion
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 484.0]
    rotation: 180
    state: true
- name: b_diezmador_ff_0
  id: b_diezmador_ff
  parameters:
    Paso: bps
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 1364.0]
    rotation: 0
    state: disabled
- name: blocks_char_to_float_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1272, 1068.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_0_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 1132.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_0_0_0
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 1268.0]
    rotation: 0
    state: enabled
- name: blocks_char_to_float_0_1
  id: blocks_char_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1352, 1204.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 944.0]
    rotation: 0
    state: enabled
- name: blocks_delay_1_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: retardo_propag
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 648.0]
    rotation: 0
    state: enabled
- name: blocks_delay_1_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: retardo_propag
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 1056.0]
    rotation: 0
    state: enabled
- name: blocks_delay_1_0_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: retardo_propag*bps
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 1192.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_int_0
  id: blocks_float_to_int
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 1332.0]
    rotation: 0
    state: disabled
- name: blocks_int_to_float_0
  id: blocks_int_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 1332.0]
    rotation: 0
    state: disabled
- name: blocks_nlog10_ff_0_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 1364.0]
    rotation: 0
    state: disabled
- name: blocks_nlog10_ff_0_1
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '1'
    vlen: N_snr
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 1188.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 488.0]
    rotation: 180
    state: true
- name: blocks_pack_k_bits_bb_0
  id: blocks_pack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 156.0]
    rotation: 0
    state: true
- name: blocks_packed_to_unpacked_xx_0
  id: blocks_packed_to_unpacked_xx
  parameters:
    affinity: ''
    alias: ''
    bits_per_chunk: bps
    comment: ''
    endianness: gr.GR_MSB_FIRST
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 148.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_0_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: N_snr
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 1368.0]
    rotation: 0
    state: disabled
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 492.0]
    rotation: 180
    state: true
- name: blocks_unpacked_to_packed_xx_0
  id: blocks_unpacked_to_packed_xx
  parameters:
    affinity: ''
    alias: ''
    bits_per_chunk: bps
    comment: ''
    endianness: gr.GR_MSB_FIRST
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 476.0]
    rotation: 180
    state: true
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: constelacion
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 160.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass inversedB(gr.sync_block):\
      \  \n\n    def __init__(self, ): \n        gr.sync_block.__init__(\n       \
      \     self,\n            name='e_inversedB_ff',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n\n    def work(self, input_items,\
      \ output_items):\n        x=input_items[0]\n        y=output_items[0]\n    \
      \    y[:]=np.power(10,x)\n        return len(y)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('e_inversedB_ff', 'inversedB', [], [('0', 'float', 1)], [('0', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1448, 1368.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    B: Rs
    EsN0max: EsN0max
    EsN0min: EsN0min
    N: N_snr
    Rs: Rs
    _source_code: "import numpy\nimport numpy as np\nimport random\nimport math\n\
      from gnuradio import gr\n\nclass e_canal_BER(gr.sync_block):\n    \"\"\"\nEs\
      \ un canal AWGN (Additive White Gaussian Noise, en banda base), Recibe la envolvente\
      \ compleja de una senal con modulacion digital. \nEl bloque tiene dos salidas:\
      \ out0, out1. En out0 entrega la misma senal recibida pero con ruido blanco\
      \ gausiano aditivo con \ndiferentes valores de potencia que corresponden a diferentes\
      \ valores Es/No; en out1 entrega un valor de Es/No aplicado a cada muestra de\
      \ out0. \nEste bloque se diferencia de otros bloques tradicionales de canal\
      \ AWGN en lo siguiente: \n- Tiene internamente una funcion que mide la potencia\
      \ promedio de la senal entrante Ps, de modo que puede calcular Es=Ps/Rs; \n\
      - Al ir variando la potencia del ruido Pn se logra variar la relacion Es/No\
      \ para que tome N posibles valores entre EsN0min y EsN0max. \n- Con eso ha completado\
      \ el primer ensayo para que otro sea el bloque que calcule la Curva de BER.\
      \ \n- Pero alli no para, sino que sigue realizando tantos ensayos como lo permita\
      \ el tiempo de simulacion, para que el bloque que calcula la Curva de BER la\
      \ pueda ir perfeccionando cada vez mas.\n\nDatos de configuracion del bloque:\n\
      N: Es el numero de puntos discretos que va a tener la curva de BER. Tambien\
      \ corresponde al numero de valores que tomar\xE1 la relacion Es/No\nEsN0min:\
      \ El minimo valor a tener en cuenta para Es/No\nEsN0max: El maximo valor a tener\
      \ en cuenta para Es/No\nRs: es la rata de simbolos.\nB: Es una caracteristica\
      \ de la senal entrante, corresponde a la frecuencia de muestreo de la se\xF1\
      al entrante y puede ser mayor o igual a Rs. \nEs: es la energia de un simbolo\n\
      \nSenales de entrada:\nIn0: Envolvente compleja de se\xF1al con modulacion digital.\n\
      \nSenales de salida: \nout0: es la salida del canal, es decir, la misma se\xF1\
      al entrante pero a la cual se le ha sumado un ruido para satisfacer una determinado\
      \ valor para la relaci\xF3n Es/No\nout1: Es el valor Es/No aplicado a la salida\
      \ actual. Pero ese valor es entregado de manera indirecta, en realidad out1\
      \ toma valores entre 0 y N-1.\n      Internamente hay un vector EsNodB que tiene\
      \ N valores entre EsN0min y EsN0max. Entonces podemos hablar de EsNodB[0], EsNodB[1],..,\
      \ EsNodB[N-1]\n      Pues bien, si out1=6, se refiere al sexto valor ede EsNodB,\
      \ osea a EsNodB[6].\n\nAlgunas variables internas son:\nNo: es la Densidad espectral\
      \ del potencia del ruido blanco.\nSNR-Db: es la relacion senal a ruido en dB\n\
      \nNOTA IMPORTANTE: \n* Nos preguntamos si este bloque no deberia llamarse e_canal_BER,\
      \ pues no maneja bits, ni relacion alguna con ellos, solo simbolos. El nombre\
      \ mas apropiado seria e_canal_EsN0\n* Este bloque no conoce el numero de bits\
      \ por simbolo, por lo tanto no puede determinar la relacion Eb/No y lo que calcula\
      \ es la BER con respecto a Es/No.\n* La Envolvente compleja puede tener varias\
      \ muestras por simbolo (Sps), por ejemplo cuando ha pasado por un bloque de\
      \ Wave Forming, por ello SampRate puede ser mayor o igual a Rs. SampRate=Rs*Sps.\
      \ El problema es que en este caso, la salida out0 tendra tambien Sps valores\
      \ por simbolo, lo cual debe ser tenido en cuenta por los bloques que usen esta\
      \ senal.\n* Es es calculado como: Es = Ps x Ts, donde Ps es la potencia promedio\
      \ de la senal entrante (se mide internamente) y Ts es la duracion de cada simbolo\
      \ o Ts = 1 / Rs. Entendemos que eso implica imaginar que los simbolos tienen\
      \ forma rectangular, lo cual puede ser valido cuando la senal entrante trae\
      \ modulacion digital basada en puntos de constelacion como es el caso de: BPSK,\
      \ QPSK, MPSK, MQAM. En otras palabras, es una idealizacion pensada en una herramienta\
      \ de analisis de Curvas de BER para comparar diferentes tipos de modulacion\
      \ en condiciones similares.\n\nPARA CORREGIR: este bloque no debria llamarse\
      \ e_canal_BER sino canal_BER_cc\n\"\"\"\n    def __init__(self, N=8, EsN0min=0,\
      \ EsN0max=16,B=100,Rs=1):  # only default arguments here\n        gr.sync_block.__init__(\n\
      \        self,\n        name='e_EsNo_Channel',\n        in_sig=[np.complex64],\n\
      \        out_sig=[np.complex64, np.int32])\n\n        # Npoints: Numero de puntos\
      \ de la curva de SER\n        # Ntrials: es un vector que contiene el numero\
      \ de ensayos a aplicar\n        # a cada punto de la curva SER. Pero los ensayos\
      \ no est\xE1n dados en\n        # n\xFAmero de muestras sino en n\xFAmero de\
      \ tramas de L muestras\n        # itrial: es el ensayo actual\n        # self.ipoint:\
      \ el punto actual de la curva\n        # Calc_v: velocidad de calculo. Entre\
      \ mas pequeno la curva de BER se vera cambiando de manera mas dinamica\n   \
      \     # pero tendremos mayor desgaste de tiempo para obtener la curva final.\n\
      \        Calc_v=1.5\n        self.Npoints = N\n        self.B=B\n        self.Rs=Rs\n\
      \        self.EsN0dB=np.linspace(EsN0min,EsN0max,N)\n        self.Ntrials=np.round(np.power(Calc_v,np.arange(N)))\n\
      \        self.ipoint=0\n        self.itrial=0\n     \n    def work(self, input_items,\
      \ output_items):\n\n        # calculo de la varianza (potencia promedio normalizada)\
      \ de la senal entrante\n        L=len(input_items[0])\n        Pin=np.mean(np.absolute(input_items[0])**2)\n\
      \n        ###############################################################  \n\
      \        ##  Aqui es donde esta el mehoyo y se puede optimizar mejor  ##\n \
      \       ##  Algo que se podria hacer es que le de mas atencion a los ## \n \
      \       ##  valores altos de Es/No que es donde es mas dificil de ob-##\n  \
      \      ##  tener la BER. Al parecer la forma facil de hacerlo es    ##\n   \
      \     ##  hacer que el vector EsN0dB vaya cambiando, ya que es     ##\n    \
      \    ##  estatico y es el que define que valores de EsN0dB usar   ##\n     \
      \   ## Nota: a veces se nos da por creer que debemos entregar un \n        ##\
      \ vector o stream que lleva N muestras consecutivas, pero   ##\n        ## no\
      \ es as\xED, sino que cada muestra que sale lleva una espe- ##\n        ## de\
      \ etiqueta que dice cual es su puesto dentro de los N    ##\n        ## valores\
      \ discretos de la curva de BER, esa etiqueta es la  ##\n        ## sale por\
      \ la salida out1, porque a cada muestra en out0,   ##\n        ## le corresponde\
      \ una en out1.                               ##\n        ## Quiz\xE1 necesitamos\
      \ incluir un retardador para que si los   ##\n        ## bits han sufrido un\
      \ retardo con respecto a la se\xF1al en el ##\n        ## canal esto sea tenido\
      \ en cuenta.\n        ## Supongo que ya tenemos un valor fijo para L=N nos liberaremos\n\
      \        ## de los for e if de abajo                                  ##\n \
      \       ###############################################################\n\n\
      \        ##################################################################\n\
      \        ## En realidad lo unico que hay que hacer agregar ruido a la    ##\n\
      \        ## senal entrante para que salga por output_items[0] y poder    ##\n\
      \        ## indicar, por output_items[0], el punto de la curva que le    ##\n\
      \        ## corresponde                                                  ##\n\
      \        ##################################################################\n\
      \        output_items[0][:] = input_items[0]+vec_noise_c(L,self.EsN0dB[self.ipoint],\
      \ Pin,self.Rs,self.B)\n        output_items[1][:] = [self.ipoint]*L # porque\
      \ ipoint no ha cambiado en la trama L \n#        print(\"ipoint= \",self.ipoint)\n\
      #        print(\"output1= \", output_items[1])\n\n        ##############################################################\n\
      \        ## seccion donde se programa el salto a un nivel mayor de   ##\n  \
      \      ## ruido a inyectar a la se\xF1al                              ##\n \
      \       ##############################################################\n   \
      \     # ya sabemos que los if no son deseables, pero tengase en cuenta\n   \
      \     # que no lo estamos usando para cada muestra, sino para cada\n       \
      \ # trama de L muestras. Podemos cambiarlo por while una vez pase\n        #\
      \ todas las pruebas\n        if self.itrial < self.Ntrials[self.ipoint]-1: \n\
      \            self.itrial += 1\n        else:\n            # reseteamos el contador\
      \ de ensayos interno. No nos importa\n            # porque nuestro bloque no\
      \ calcula promedios, solo suma ruido\n            # y senala a que punto de\
      \ la curva corresponde. Ahora pasamos\n            # al siguiente punto de la\
      \ curva\n            self.itrial=0\n            if self.ipoint < self.Npoints-1:\n\
      \                self.ipoint += 1\n            else:\n                self.ipoint=0\n\
      \        return len(output_items[0])\n\n#############################################################################\n\
      ## calculo de una muestra de ruido\n## Rb: Rata de simbolos\n## B: Es el ancho\
      \ de banda pasobanda que va a ocupar el ruido blanco, que no\n##    no es otra\
      \ cosa que 2 veces el ancho de banda que tiene la envolvente\n##    compleja\
      \ del ruido blanco que estamos generando. Estamos considerando que\n##    B\
      \ es igual a la frecuencia de muestreo de la senal\n## N: es el numero de elementos\
      \ en el vector\n## P_s: es la varianza (potencia promedio) de la senal entrante.\
      \ \n## SNR_dB: es la relacion senal a ruido en dB del ruido respecto a P_signal\n\
      #############################################################################\n\
      \ndef vec_noise_c(N, EsN0_dB,P_s,Rs,B):\n\n    EsN0=pow(10.,EsN0_dB/10.) \n\
      \    SNR=EsN0*Rs/B\n    P_n = P_s/SNR  # la potencia del ruido\n    Vrms = math.sqrt(P_n)\n\
      #    print(\"Vrms= \",Vrms)\n    # random.normal() pide la desviacion standard\
      \ que es el mismo Valor RMS\n    # Vrms es el Valor RMS de la Envolvente compleja\
      \ del ruido, pero la vamos\n    # a generar como un ruido real mas un ruido\
      \ imaginario. Pero esas dos\n    # senales tienen un valor RMS un tanto diferente:\
      \ Vrms_q=Vrms/math.sqrt(2.) \n    Vrms_q= [Vrms/math.sqrt(2.)]*N # Notese que\
      \ Vrms_q es un vector\n    # print(\"Vrms_q= \",Vrms_q)\n    n=np.random.normal(0.,Vrms_q)+np.random.normal(0.,Vrms_q)*1.j\n\
      \    return n\n\n\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: "('e_EsNo_Channel', 'e_canal_BER', [('N', '8'), ('EsN0min', '0'), ('EsN0max',\
      \ '16'), ('B', '100'), ('Rs', '1')], [('0', 'complex', 1)], [('0', 'complex',\
      \ 1), ('1', 'int', 1)], '\\nEs un canal AWGN (Additive White Gaussian Noise,\
      \ en banda base), Recibe la envolvente compleja de una senal con modulacion\
      \ digital. \\nEl bloque tiene dos salidas: out0, out1. En out0 entrega la misma\
      \ senal recibida pero con ruido blanco gausiano aditivo con \\ndiferentes valores\
      \ de potencia que corresponden a diferentes valores Es/No; en out1 entrega un\
      \ valor de Es/No aplicado a cada muestra de out0. \\nEste bloque se diferencia\
      \ de otros bloques tradicionales de canal AWGN en lo siguiente: \\n- Tiene internamente\
      \ una funcion que mide la potencia promedio de la senal entrante Ps, de modo\
      \ que puede calcular Es=Ps/Rs; \\n- Al ir variando la potencia del ruido Pn\
      \ se logra variar la relacion Es/No para que tome N posibles valores entre EsN0min\
      \ y EsN0max. \\n- Con eso ha completado el primer ensayo para que otro sea el\
      \ bloque que calcule la Curva de BER. \\n- Pero alli no para, sino que sigue\
      \ realizando tantos ensayos como lo permita el tiempo de simulacion, para que\
      \ el bloque que calcula la Curva de BER la pueda ir perfeccionando cada vez\
      \ mas.\\n\\nDatos de configuracion del bloque:\\nN: Es el numero de puntos discretos\
      \ que va a tener la curva de BER. Tambien corresponde al numero de valores que\
      \ tomar\xE1 la relacion Es/No\\nEsN0min: El minimo valor a tener en cuenta para\
      \ Es/No\\nEsN0max: El maximo valor a tener en cuenta para Es/No\\nRs: es la\
      \ rata de simbolos.\\nB: Es una caracteristica de la senal entrante, corresponde\
      \ a la frecuencia de muestreo de la se\xF1al entrante y puede ser mayor o igual\
      \ a Rs. \\nEs: es la energia de un simbolo\\n\\nSenales de entrada:\\nIn0: Envolvente\
      \ compleja de se\xF1al con modulacion digital.\\n\\nSenales de salida: \\nout0:\
      \ es la salida del canal, es decir, la misma se\xF1al entrante pero a la cual\
      \ se le ha sumado un ruido para satisfacer una determinado valor para la relaci\xF3\
      n Es/No\\nout1: Es el valor Es/No aplicado a la salida actual. Pero ese valor\
      \ es entregado de manera indirecta, en realidad out1 toma valores entre 0 y\
      \ N-1.\\n      Internamente hay un vector EsNodB que tiene N valores entre EsN0min\
      \ y EsN0max. Entonces podemos hablar de EsNodB[0], EsNodB[1],.., EsNodB[N-1]\\\
      n      Pues bien, si out1=6, se refiere al sexto valor ede EsNodB, osea a EsNodB[6].\\\
      n\\nAlgunas variables internas son:\\nNo: es la Densidad espectral del potencia\
      \ del ruido blanco.\\nSNR-Db: es la relacion senal a ruido en dB\\n\\nNOTA IMPORTANTE:\
      \ \\n* Nos preguntamos si este bloque no deberia llamarse e_canal_BER, pues\
      \ no maneja bits, ni relacion alguna con ellos, solo simbolos. El nombre mas\
      \ apropiado seria e_canal_EsN0\\n* Este bloque no conoce el numero de bits por\
      \ simbolo, por lo tanto no puede determinar la relacion Eb/No y lo que calcula\
      \ es la BER con respecto a Es/No.\\n* La Envolvente compleja puede tener varias\
      \ muestras por simbolo (Sps), por ejemplo cuando ha pasado por un bloque de\
      \ Wave Forming, por ello SampRate puede ser mayor o igual a Rs. SampRate=Rs*Sps.\
      \ El problema es que en este caso, la salida out0 tendra tambien Sps valores\
      \ por simbolo, lo cual debe ser tenido en cuenta por los bloques que usen esta\
      \ senal.\\n* Es es calculado como: Es = Ps x Ts, donde Ps es la potencia promedio\
      \ de la senal entrante (se mide internamente) y Ts es la duracion de cada simbolo\
      \ o Ts = 1 / Rs. Entendemos que eso implica imaginar que los simbolos tienen\
      \ forma rectangular, lo cual puede ser valido cuando la senal entrante trae\
      \ modulacion digital basada en puntos de constelacion como es el caso de: BPSK,\
      \ QPSK, MPSK, MQAM. En otras palabras, es una idealizacion pensada en una herramienta\
      \ de analisis de Curvas de BER para comparar diferentes tipos de modulacion\
      \ en condiciones similares.\\n\\nPARA CORREGIR: este bloque no debria llamarse\
      \ e_canal_BER sino canal_BER_cc\\n', ['B', 'Rs'])"
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [876.0, 280]
    rotation: 270
    state: true
- name: epy_block_2
  id: epy_block
  parameters:
    N: N_snr
    _source_code: "import numpy as np\nimport random\nimport math\nimport numpy\n\
      from gnuradio import gr\n\nclass e_BERtool(gr.sync_block):\n\n    \"\"\"\nCalcula\
      \ la curva de SER (Symbol Error Ratio) o la Curva BER (Bit Error Ratio). Para\
      \ lograrlo, por las 3 entradas in0, in1, in2 espera hasta que hallan llegado\
      \ N muestras, con lo cual puede obtener una primera version de la curva de BER\
      \ (o de SER) de N muestras. Esa curva de BER (o de SER) se va perfeccionando\
      \ en el tiempo, ya que lo anterior se repite una y otra vez, tanto como lo permita\
      \ el tiempo que dure corriendo el flujograma, con lo cual va recalculando la\
      \ curva de BER (o de SER) para que sea cada vez mas perfecta. \n\nSenales de\
      \ entrada:\nin0: El numero del punto de la BER que esta siendo atendido en el\
      \ momento, el cual corresponde a un determinado valor de Es/No. Pero en realidad\
      \ este bloque desconoce Es/No y solo le interesa conocer cual es el numero del\
      \ punto a atender  \nin1: es la se\xF1al de bits (o de simbolos emitidos), osea,\
      \ aquellos que est\xE1n antes del canal\nin2: Es la se\xF1al de los bits recibidos\
      \ (o de simbolos), despu\xE9s de pasar por un canal \n\nSenal de salida\nPuede\
      \ ser vista como una senal que cada N muestras representa la actualizacion de\
      \ la curva de BER. La idea es convertirla en un vector de N muestras y graficarla\
      \ mediante algo asi como un \"QT GUI vector Sink\" \n\nNOTA IMPORTANTE:\n* El\
      \ bloque e_canal_BER es el que se ha estado usando para generar la senal que\
      \ entra por in0. Las limitaciones que eso genera son las siguientes:\n   **\
      \ El canal e_canal_BER esta pensado para llevar envolvente compleja, es decir\
      \ simbolos. Por lo tanto, lo que realmente se est\xE1 obteniendo en una Curva\
      \ de SER. Convertir eso a Curva de BER puede que no sea tan facil, necesitaria\
      \ no contar con que en in1 e in2 esten las senales de bits en vez de simbolos,\
      \ sino que habria que ajustar la senal destinada a la entrada in0 para que hacer\
      \ que por cada bit haya un valor de Es/No o de Eb/No\n   ** El bloque e_canal_BER\
      \ lo que entrega es la relacion Es/No.\n   ** Convertir Es/No a Eb/No es posible\
      \ pero como parte de un flujograma donde se conozca el numero de bits por simbolo\
      \ (Bps), teniendo en cuenta que, en t\xE9rminos lineales, Eb=Es/Bps\n   ** La\
      \ manera en que esta hecho el bloque e_canal_BER hace que si el numero de muestras\
      \ por simbolo es mayor a 1 (Sps>1), la senal Es/No sale con Sps valores por\
      \ simbolo. En ese caso se requeriria aplicar algun tipo de mejora ya que nuestro\
      \ bloque supone que solo hay una muestra Es/No (o Es/No) por cada muestra de\
      \ senal en in1 e in2.\n* las senales in1 y in2 pueden ser bits o simbolos. En\
      \ el segundo caso es el que hemos usado mas, ya que las senales in1 e in2 son\
      \ de tipo M-PAM. Por eso, lo que hemos estado calculando es Curva de SER. Se\
      \ puede pasar facilmente a Curvas de BER, si a los bits se les aplica de-M-PAM.\n\
      \nPARA CORREGIR: Este bloque no deberia llamarme e_BERtool, sino BERtool_if\n\
      \ \n\"\"\"\n\n    ############################################################################################\n\
      \    ##  Constructor del bloque                                            \
      \                    ##\n    ############################################################################################\n\
      \n    def __init__(self, N=16):  \n        gr.sync_block.__init__(\n       \
      \ self,\n        name='v_BERtool',\n        in_sig=[np.int32, np.int8, np.int8],\n\
      \        out_sig=[(np.float32,N)])\n\n        # N es el numero de puntos de\
      \ la curva de SER a calcular\n        # self.errores = np.zeros(self.N)\n  \
      \      # count: cuenta el numero de muestras que ya han sido procesadas para\
      \ cada punto de la BER\n        # SER: es la memoria de la ultima curva calculada\n\
      \n        # self.count=0. # DUDA: PARECE QUE HAY ERROR. DEBERIA HABER UN CONTADOR\
      \ POR CADA k\n        # self.count=np.zeros(self.N)\n\n        self.N=N \n \
      \       self.errores = np.float64(np.ones(self.N))\n        self.count=np.uint64(np.ones(self.N))\n\
      \        #self.SER=np.ones(self.N)\n        self.SER=[1e-12]*N\n        #self.ipointi=0\
      \ \n\n    ############################################################################################\n\
      \    ##  Lo de arriba es solo el constructor del bloque). Aqui comienza el verdadero\
      \ cdigo     ##\n    ############################################################################################\n\
      \n    def work(self, input_items, output_items):\n        in0=input_items[1]\
      \ \n        in1=input_items[2] \n        \n        # L: es el tamano del vector\
      \ de entrada. \n        # i: es el punto actual de los datos entrantes\n   \
      \     # ipoint: es el punto actual de la SER\n        # count: vector de contadores\
      \ para cada punto de la curva\t\t\n        L=len(in0)\n\n        # Se recalcula\
      \ la curva SER. \n        for i in range(0,L):\n            ipoint=input_items[0][i]\
      \ \n            self.errores[ipoint] += int(in0[i]!=in1[i])\n            self.SER[ipoint]=self.errores[ipoint]/self.count[ipoint]\n\
      \            self.count[ipoint] = self.count[ipoint]+1\n\n        # La salida\
      \ es simplemente la curva de SER\n        output_items[0][:]=self.SER\n    \
      \    return len(output_items[0])\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: "('v_BERtool', 'e_BERtool', [('N', '16')], [('0', 'int', 1), ('1',\
      \ 'byte', 1), ('2', 'byte', 1)], [('0', 'float', 16)], '\\nCalcula la curva\
      \ de SER (Symbol Error Ratio) o la Curva BER (Bit Error Ratio). Para lograrlo,\
      \ por las 3 entradas in0, in1, in2 espera hasta que hallan llegado N muestras,\
      \ con lo cual puede obtener una primera version de la curva de BER (o de SER)\
      \ de N muestras. Esa curva de BER (o de SER) se va perfeccionando en el tiempo,\
      \ ya que lo anterior se repite una y otra vez, tanto como lo permita el tiempo\
      \ que dure corriendo el flujograma, con lo cual va recalculando la curva de\
      \ BER (o de SER) para que sea cada vez mas perfecta. \\n\\nSenales de entrada:\\\
      nin0: El numero del punto de la BER que esta siendo atendido en el momento,\
      \ el cual corresponde a un determinado valor de Es/No. Pero en realidad este\
      \ bloque desconoce Es/No y solo le interesa conocer cual es el numero del punto\
      \ a atender  \\nin1: es la se\xF1al de bits (o de simbolos emitidos), osea,\
      \ aquellos que est\xE1n antes del canal\\nin2: Es la se\xF1al de los bits recibidos\
      \ (o de simbolos), despu\xE9s de pasar por un canal \\n\\nSenal de salida\\\
      nPuede ser vista como una senal que cada N muestras representa la actualizacion\
      \ de la curva de BER. La idea es convertirla en un vector de N muestras y graficarla\
      \ mediante algo asi como un \"QT GUI vector Sink\" \\n\\nNOTA IMPORTANTE:\\\
      n* El bloque e_canal_BER es el que se ha estado usando para generar la senal\
      \ que entra por in0. Las limitaciones que eso genera son las siguientes:\\n\
      \   ** El canal e_canal_BER esta pensado para llevar envolvente compleja, es\
      \ decir simbolos. Por lo tanto, lo que realmente se est\xE1 obteniendo en una\
      \ Curva de SER. Convertir eso a Curva de BER puede que no sea tan facil, necesitaria\
      \ no contar con que en in1 e in2 esten las senales de bits en vez de simbolos,\
      \ sino que habria que ajustar la senal destinada a la entrada in0 para que hacer\
      \ que por cada bit haya un valor de Es/No o de Eb/No\\n   ** El bloque e_canal_BER\
      \ lo que entrega es la relacion Es/No.\\n   ** Convertir Es/No a Eb/No es posible\
      \ pero como parte de un flujograma donde se conozca el numero de bits por simbolo\
      \ (Bps), teniendo en cuenta que, en t\xE9rminos lineales, Eb=Es/Bps\\n   **\
      \ La manera en que esta hecho el bloque e_canal_BER hace que si el numero de\
      \ muestras por simbolo es mayor a 1 (Sps>1), la senal Es/No sale con Sps valores\
      \ por simbolo. En ese caso se requeriria aplicar algun tipo de mejora ya que\
      \ nuestro bloque supone que solo hay una muestra Es/No (o Es/No) por cada muestra\
      \ de senal en in1 e in2.\\n* las senales in1 y in2 pueden ser bits o simbolos.\
      \ En el segundo caso es el que hemos usado mas, ya que las senales in1 e in2\
      \ son de tipo M-PAM. Por eso, lo que hemos estado calculando es Curva de SER.\
      \ Se puede pasar facilmente a Curvas de BER, si a los bits se les aplica de-M-PAM.\\\
      n\\nPARA CORREGIR: Este bloque no deberia llamarme e_BERtool, sino BERtool_if\\\
      n \\n', ['N'])"
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 1176.0]
    rotation: 0
    state: true
- name: epy_block_4
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.interp_block):\n    def __init__(self,\
      \ k=2):  \n        gr.interp_block.__init__(\n            self,\n          \
      \  name='e_zero_order_hold_ii',\n            in_sig=[np.int32],\n          \
      \  out_sig=[np.int32], interp=k\n        )\n        self.k=k\n\n    def work(self,\
      \ input_items, output_items):\n        in0 = input_items[0]\n        out = output_items[0]\n\
      \        j = 0\n        for i in range (len(in0)):\n            for x in range(self.k):\n\
      \                out[j] =  in0[i]\n                j += 1\n        return len(output_items[0])\n\
      \n"
    affinity: ''
    alias: ''
    comment: ''
    k: bps
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('e_zero_order_hold_ii', 'blk', [('k', '2')], [('0', 'int', 1)], [('0',
      'int', 1)], '', ['k'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 1164.0]
    rotation: 0
    state: true
- name: fec_ber_bf_0
  id: fec_ber_bf
  parameters:
    affinity: ''
    alias: ''
    berlimit: '-7.0'
    berminerrors: '100'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    test_mode: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 1352.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 4.0]
    rotation: 0
    state: true
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import random
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 4.0]
    rotation: 0
    state: true
- name: menu
  id: qtgui_tab_widget
  parameters:
    alias: ''
    comment: ''
    gui_hint: 4,0,1,1
    label0: Time
    label1: PSD
    label10: Tab 10
    label11: Tab 11
    label12: Tab 12
    label13: Tab 13
    label14: Tab 14
    label15: Tab 15
    label16: Tab 16
    label17: Tab 17
    label18: Tab 18
    label19: Tab 19
    label2: Eye Diagram
    label3: Constellation
    label4: Timing
    label5: M-PAM
    label6: Bits
    label7: BER SER Curve
    label8: Tab 8
    label9: Tab 9
    num_tabs: '8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1376, 724.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: menu@3:0,0,1,1
    label1: p1 (Vista discreta)
    label10: ''
    label2: r1 (Vista discreta)
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '1.5'
    xmin: '-1.5'
    ymax: '1.5'
    ymin: '-1.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 724.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"magenta"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: menu@3:0,1,1,1
    label1: p1 (Vista continua)
    label10: ''
    label2: r1 (Vista continua)
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '0'
    marker2: '-1'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '1'
    style10: '0'
    style2: '1'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '1.5'
    xmin: '-1.5'
    ymax: '1.5'
    ymin: '-1.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 788.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0_1_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: menu@3:1,1,1,1
    label1: p3 (Original)
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '1.5'
    xmin: '-1.5'
    ymax: '1.5'
    ymin: '-1.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 860.0]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_1
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: menu@4:2,0,1,1
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 764.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.05'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: menu@1:0,0,1,1
    label: Relative Gain
    label1: p1
    label10: ''''''
    label2: r1
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-80'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 756.0]
    rotation: 0
    state: enabled
- name: qtgui_number_sink_0
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: menu@6:1,0,1,1
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: BER
    nconnections: '1'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 1332.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: menu@0:1,0,1,1
    label1: p1 (Re)
    label10: Signal 10
    label2: r1 (Re)
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: 16*Sps
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 948.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: red
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: menu@0:2,0,1,1
    label1: p1 (Im)
    label10: Signal 10
    label2: r1 (Im)
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: 16*Sps
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 1004.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: magenta
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: menu@4:3,0,1,2
    label1: t3 (RE)
    label10: Signal 10
    label2: t3 (Im)
    label3: r3 (Re)
    label4: r3 (Im)
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '32'
    srate: Rs
    stemplot: 'True'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '3'
    width4: '3'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 660.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: menu@5:4,0,1,1
    label1: t4
    label10: Signal 10
    label2: r4
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '0'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '32'
    srate: Rs
    stemplot: 'True'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: M
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 1060.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_2_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: menu@6:4,0,1,1
    label1: t4
    label10: Signal 10
    label2: r4
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '0'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: 32*bps
    srate: Rb
    stemplot: 'True'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '3'
    width10: '1'
    width2: '3'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-0.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1552, 1220.0]
    rotation: 0
    state: enabled
- name: qtgui_vector_sink_f_0_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'False'
    gui_hint: menu@7:1,0,1,1
    label1: '"SER"'
    label10: ''
    label2: '"BER"'
    label3: 8PSK
    label4: '"16QAM"'
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '"Curva de BER"'
    nconnections: '1'
    ref_level: '0'
    showports: 'True'
    update_time: '0.10'
    vlen: N_snr
    width1: '4'
    width10: '1'
    width2: '4'
    width3: '4'
    width4: '4'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Eb/N0 [dB]"'
    x_start: EbN0min
    x_step: (EbN0max-EbN0min)/float(N_snr)
    x_units: '"dB"'
    y_axis_label: '"logPe"'
    y_units: '""'
    ymax: '0'
    ymin: '-8'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 1156.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: p1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1020.0, 376]
    rotation: 90
    state: true
- name: virtual_sink_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [748.0, 248]
    rotation: 270
    state: true
- name: virtual_sink_0_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: r3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [748.0, 352]
    rotation: 90
    state: true
- name: virtual_sink_0_0_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: r4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [460.0, 344]
    rotation: 90
    state: true
- name: virtual_sink_0_0_0_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: r5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [132.0, 344]
    rotation: 90
    state: true
- name: virtual_sink_0_0_0_0_0_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: r4a
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [276.0, 344]
    rotation: 90
    state: true
- name: virtual_sink_0_0_0_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [460.0, 240]
    rotation: 270
    state: true
- name: virtual_sink_0_0_0_1_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [132.0, 240]
    rotation: 270
    state: true
- name: virtual_sink_0_0_0_1_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t4a
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [276.0, 240]
    rotation: 270
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: p1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 860.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 868.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 1052.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: r4
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 1116.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: r5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 1380.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_0_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: p3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1164.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_0_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: p3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1332.0]
    rotation: 0
    state: disabled
- name: virtual_source_0_0_0_0_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 1188.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_3
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: r5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1260.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0_3_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: r5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1428.0]
    rotation: 0
    state: disabled
- name: virtual_source_0_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 644.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: r3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 772.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1_0_3
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1212.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_1_0_3_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t5
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 1380.0]
    rotation: 0
    state: disabled
- name: vs0_1_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: p3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1068.0, 376]
    rotation: 90
    state: enabled
- name: wform
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "import math\nimport numpy\n#######################################################\n\
      ##        Hecho por Homero Ortega Boada              ##\n##        comdiguis@saber.uis.edu.co\
      \                 ##\n##     Universidad Industrial de Santander           ##\n\
      #######################################################\n\n#######################################################\n\
      ##               Forma rectangular                   ##\n#######################################################\
      \                       \ndef rect(Sps):\n    return Sps*[1.,]\n\n#######################################################\n\
      ##               Forma de Nyquist                    ##\n#######################################################\
      \                       \ndef nyq(Sps,ntaps):\n    n=numpy.linspace(-int(ntaps/2),\
      \ int(ntaps/2-1),ntaps)\n    h=numpy.sinc(n/Sps)\n#    return h/numpy.amax(h)\n\
      \    return h\n#######################################################\n## \
      \              Forma Coseno Alzado                 ##\n#######################################################\
      \                       \ndef rcos(Sps,ntaps,beta):\n    if beta==0:\n     \
      \   h=nyq(Sps,ntaps)\n    else:\n        h=ntaps*[0,]\n        for n in range(ntaps):\n\
      \            k=n-ntaps/2. # esto es para que h[n] quede centrada en la mitad\
      \ del vector\n            if abs(k)==Sps/(2.*beta):\n                h[n]=numpy.sinc(1./(2.*beta))*math.pi/4.\n\
      \            else:\n                h[n]=numpy.sinc(k/Sps)*math.cos(beta*k*math.pi/Sps)/(1.-(2.*beta*k/Sps)**2)\
      \                \n    Amp=numpy.amax(h)\n    return h/Amp\n#######################################################\n\
      ##            Forma Raiz de Coseno Alzado            ##\n#######################################################\
      \                       \n\ndef rrcos(Sps,ntaps,beta):\n    if beta==0:\n  \
      \      h=nyq(Sps,ntaps)\n    else:\n        h=ntaps*[0,]\n        beta4=4.*beta\n\
      \        for n in range(ntaps):\n            k=n-ntaps/2. # esto es para que\
      \ h[n] quede centrada en la mitad del vector\n            if k==0:\n       \
      \         h[n]=1+beta*(4./math.pi-1.)\n            elif abs(k)==Sps/beta4:\n\
      \                ha=(1.+2./math.pi)*math.sin(math.pi/beta4)\n              \
      \  hb=(1.-2./math.pi)*math.cos(math.pi/beta4)\n                h[n]=(ha+hb)*beta/math.sqrt(2.)\n\
      \            else:\n                ks=k/Sps\n                kspi=math.pi*ks\n\
      \                Num=math.sin(kspi*(1-beta))+beta4*ks*math.cos(kspi*(1+beta))\n\
      \                Den=kspi*(1.-(beta4*ks)**2)\n                h[n]=Num/Den \
      \               \n    Amp=numpy.amax(h)\n    return h/Amp\n########################################################\n\
      ##     Bipolar non return to zero level signal        ##\n########################################################\n\
      def B_NRZ_L(Sps):\n    return Sps*[1.,]\n\n########################################################\n\
      ##  Forma sinc . Es la misma nyq() que aparece arriba ##\n########################################################\n\
      def sinc(Sps,ntaps):\n    n=np.linspace(-int(ntaps/2), int(ntaps/2-1),ntaps)\n\
      \    h=np.sinc(n/Sps)\n    return h\n########################################################\n\
      ##              forma diente se sierra                ##\n########################################################\n\
      def saw(Sps):\n    return np.linspace(0,Sps-1,Sps)\t\n########################################################\n\
      #         Bipolar non return to zero signal           ##\n########################################################\n\
      def RZ(Sps):\n    h=Sps*[1.,]\n    Sps_m=int(Sps/2)\n    h[Sps_m+1:Sps:1]=np.zeros(Sps-Sps_m)\n\
      \    return h\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1472, 12.0]
    rotation: 0
    state: disabled

connections:
- [E3TRadio_Zero_Order_Hold_0, '0', blocks_float_to_int_0, '0']
- [E3TRadio_e_BERtool_0_0, '0', b_diezmador_ff_0, '0']
- [analog_random_source_x_0, '0', blocks_pack_k_bits_bb_0, '0']
- [analog_random_source_x_0, '0', virtual_sink_0_0_0_1_0, '0']
- [b_demod_constelacion_cb_0, '0', blocks_unpacked_to_packed_xx_0, '0']
- [b_demod_constelacion_cb_0, '0', virtual_sink_0_0_0_0_0, '0']
- [b_diezmador_ff_0, '0', blocks_nlog10_ff_0_0, '0']
- [blocks_char_to_float_0, '0', qtgui_time_sink_x_2, '0']
- [blocks_char_to_float_0_0, '0', qtgui_time_sink_x_2, '1']
- [blocks_char_to_float_0_0_0, '0', qtgui_time_sink_x_2_0, '1']
- [blocks_char_to_float_0_1, '0', qtgui_time_sink_x_2_0, '0']
- [blocks_complex_to_float_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_complex_to_float_0, '1', qtgui_time_sink_x_0_0, '0']
- [blocks_delay_1_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_delay_1_0_0, '0', blocks_char_to_float_0, '0']
- [blocks_delay_1_0_0_0, '0', blocks_char_to_float_0_1, '0']
- [blocks_delay_1_0_0_0, '0', fec_ber_bf_0, '0']
- [blocks_float_to_int_0, '0', E3TRadio_e_BERtool_0_0, '0']
- [blocks_int_to_float_0, '0', E3TRadio_Zero_Order_Hold_0, '0']
- [blocks_nlog10_ff_0_0, '0', blocks_stream_to_vector_0_0, '0']
- [blocks_nlog10_ff_0_1, '0', qtgui_vector_sink_f_0_0, '0']
- [blocks_pack_k_bits_bb_0, '0', blocks_packed_to_unpacked_xx_0, '0']
- [blocks_pack_k_bits_bb_0, '0', virtual_sink_0_0_0_1_1, '0']
- [blocks_packed_to_unpacked_xx_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [blocks_packed_to_unpacked_xx_0, '0', virtual_sink_0_0_0_1, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_null_sink_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', virtual_sink_0_0_0_0_0_0, '0']
- [blocks_unpacked_to_packed_xx_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [blocks_unpacked_to_packed_xx_0, '0', virtual_sink_0_0_0_0_0_1, '0']
- [digital_chunks_to_symbols_xx_0, '0', epy_block_1, '0']
- [digital_chunks_to_symbols_xx_0, '0', virtual_sink_0_0_0, '0']
- [epy_block_0, '0', qtgui_number_sink_0, '0']
- [epy_block_1, '0', b_demod_constelacion_cb_0, '0']
- [epy_block_1, '0', virtual_sink_0, '0']
- [epy_block_1, '0', virtual_sink_0_0_0_0, '0']
- [epy_block_1, '1', vs0_1_0, '0']
- [epy_block_2, '0', blocks_nlog10_ff_0_1, '0']
- [epy_block_4, '0', epy_block_2, '0']
- [fec_ber_bf_0, '0', epy_block_0, '0']
- [virtual_source_0, '0', blocks_complex_to_float_0, '0']
- [virtual_source_0, '0', qtgui_const_sink_x_0, '0']
- [virtual_source_0, '0', qtgui_const_sink_x_0_0, '0']
- [virtual_source_0, '0', qtgui_freq_sink_x_0, '0']
- [virtual_source_0_0_0, '0', qtgui_const_sink_x_0_1_0, '0']
- [virtual_source_0_0_0_0, '0', blocks_delay_1_0_0, '0']
- [virtual_source_0_0_0_0_0, '0', blocks_char_to_float_0_0, '0']
- [virtual_source_0_0_0_0_0_0, '0', blocks_char_to_float_0_0_0, '0']
- [virtual_source_0_0_0_0_0_0, '0', fec_ber_bf_0, '1']
- [virtual_source_0_0_0_0_0_1, '0', epy_block_4, '0']
- [virtual_source_0_0_0_0_0_1_0, '0', blocks_int_to_float_0, '0']
- [virtual_source_0_0_0_0_1, '0', blocks_delay_1_0_0_0, '0']
- [virtual_source_0_0_0_0_3, '0', epy_block_2, '2']
- [virtual_source_0_0_0_0_3_0, '0', E3TRadio_e_BERtool_0_0, '2']
- [virtual_source_0_1_0, '0', blocks_delay_1_0, '0']
- [virtual_source_0_1_0_0, '0', qtgui_const_sink_x_1, '0']
- [virtual_source_0_1_0_0, '0', qtgui_time_sink_x_1, '1']
- [virtual_source_0_1_0_3, '0', epy_block_2, '1']
- [virtual_source_0_1_0_3_0, '0', E3TRadio_e_BERtool_0_0, '1']

metadata:
  file_format: 1
